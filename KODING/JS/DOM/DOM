// RINGKASAN DOM
// pengganti console.log di halaman html
document.write("<p>Tutorial Javascript!</p>");
--------------------------------
// selector:
const  coba 	= document.getElementById('h1')
const  coba2	= document.getElementsByTagName('p')[2];				
const  coba3	= document.getElementsClassName('ada')[2];	
const  coba4	= document.querySelector(#ada)		   
const  coba5	= document.querySelectorAll(.asa)
--------------------------------
// manipulasi elemen:
coba.innerHTML  = `<p>${nama}</p>`; 						// mengisi isi html
coba.style		= coba.style.color = 'red';					// set css
--------------------------------
// baca elemen:
coba.length													// jumlah coba yang dipilih (jika banyak htmlcollection)
coba.innerText
coba.textContent
--------------------------------
// --- alternative
document.getElementById('h1').innerHTML = 'haloo';			// cara ini juga boleh
coba.href = "data/img/gb1.jpg";
--------------------------------
// lanjuuuuuut


/*
DOM hilman

Interface javascript untuk html untuk memanipulasi dan mengubah struktur html nya
Komponen yang di manipulasi oleh dom adalah

Html
Atribut
teks 
css
dll

Daftar pelajaran
Dom selection 
dom manipulasi 
dom transversal 
event handling

DOM TREE

dalam struktur script html mulai dari html - head - body - h1 - p1 - a - dan lain-lain
Semua disebut simpul (node) yang paling atas disebut root atas html ada root dokumen

Tipe node ada banyak diantaranya elemen(HTML), atribut(YA ATRIBUT) ,teks(apa yg di input usr),  
Banyak tipe node tapi pelajaran hanya konsentrasi pada tiga di atas. atribut sendiri sudah 
hampir dihapus oleh javascript karena sudah menyatu dengan elemen

Membedakan "nodelist" dan "html collection"
* Jika kita memilih satu node tipe apa saja maka disebut node
* Kalau kita memilih lebih dari 1 node tipe apa saja disebut "node list"
* kalau kita memilih lebih dari satu node dengan tipe dokumen maka disebut "html collection"

Perbedaan ini diperlukan untuk menangani pengelolaan

Sifat-sifat node vs html collection
- keduanya adalah merupakan kumpulan node
- strukturnya mirip array
- html collection bersifat live sedang nodelist tidak, berguna saat manipulasi dom
-

Struktur hirarki dom
Root node = dokumen
Parrent node
Child
Grand parent
Ansestor
Sibling

Tapi yang dibutuhkan hanya 3 di atas
*/
DOM SELECTION

.getElementById()				return: satu elemen html
.getElementsByTagName()				return: html collection
.getElementsClassName()				return: html collection
.querySelector()				return: satu elemen html
.querySelectorAll()				return: node list

cara tangkap nya:

const  coba 	= document.get.getElementById('h1')
const  coba2	= document.getElementsByTagName('p')[2];				
const  coba3	= document.getElementsClassName('ada')[2];	
const  coba4	= document.querySelector(#ada)			//(section#a #ada)
const  coba5	= document.querySelectorAll(.asa)     		//(div#a .asa)

'document' bisa di ganti dengan parent lain 
selector css bisa pake specificity pake spasi pake 			div:nth-child(2)
/////////////////cari di css??????????

DOM MANIPULATION
-MANIPULLATION ELEMEN

dalam contoh di bawah ini menggunakan selection di atas 
	-innerHTML;		//coba.innerHTML = '<p>sebuh paaragraf</p>';	// sifatnya menimpa
	-style;			//coba2.style.backgrounColor ='red';			// sifatnya menimpa
	-setAttribute;		//coba3.setAttribute('name','sandhika');		// nambah atribut
	-getAttribute;		//coba4.getAttribute('href');					// membaca isi attribut href
	-removeAttribute;	//coba5.removeAttribute('href');    			// menghapus sebuah atribut
	-classlist											//perlakuan khusus class supaya gak menimpa
		-add()		//coba6.classlist.add('label');					// tambah class = label
		-remove()				//coba7.classlist.remove('label'); 				// hapus class = label
		-toggle()				//coba8.classlist.toggle('label');				// on/off class = label
		-item()					//coba9.classlist.item(2);						// melihat nama class ke dua jika pada 
																				// element tersebut punya lebih dari satu class
		-contains()				//coba10.classlist.contins('label')	;			// nanya adakah class bernama label?
		-replace()				//coba11.classlist.replace('label','tabel');	// ganti class 'label' jadi 'tabel'

// -MANIPULATION NODE

// dalam contoh di bawah ini menggunakan selection di atas
	-document.createElement();	//const pBaru = document.createElement('p');   					// langkahnya buat dulu 'wadah' di document sebuah <p>
								//const textPBaru = document.createTextNode('isi paragraf');	// lalu buat lagi di document sebuah tulisan untuk 'isi' <p> nantinya
								//pBaru.appendChild(textPBaru);									// masukkan isi kedalam wadah
								//coba1.appendChild(pbaru)										// posisikan ke dalam html(dalam akhir div a umpamanya)
	-document.createTextNode();	//
	-node.appendChild();		//
	-node.insertBefore();		//ul.insertBefore(liBaru,li2)									// kita tangkap dulu masing2 'ul', 'liBaru', 'li2' 
																								// (ul=parent, liBaru=element baru, li2=li yang sudah ada untuk 
																								//	diletakaan sebelunya[before])lakukan pakai seleksi;
	-parentNode.RemoveChild();	//sectionA.removeChild(link)									// "sectionA" dan "link" harus di seleksi dulu pake seleksion
	-parentNode.replaceChild();	//sectionB.replaceChild(link,pBaru)								// ambil parentnya lalu repacechild(NodeBaru,noodeLama) tentunya 'panggil dan buat' dulu elemen2 nya

// yang baru hampir mirip fungsinya namun masih alpha

parent.append()
parent.prepend()
child.after()
child.before()
child.remove()
child.replaceWith()


/*
-EVENT
cara mendengarkkan event atau :
sebuah kejadian yg terjadi dalam DOM oleh user atau API
event ada: click, hover, roler, double click, right click disebut 
di bawah ini ada 3 cara : 
	"attribut HTML", 
	"method onclick", 
	"function". 
ada keunggulan dan karakter nya masing2
*/

function ubahWarna (){}																			// buat dulu sebuah function

-event Handler				// 
 	-inline html attribute 	// <p onclick='ubahwarna()'	>	//  jangan di pakai					// menulis event di 'html' langsung dan menjalan kan function  yang ada di 'js' yg di buat terlebih dahulu
 	-element methode 		// p2.onclick = ubahwarna;											// p2 nya di pnggil duu pake selection lalu.onclick = lalu function tapi tidak pake kurung ini di 'js'
-addEventListener			// p4.addEventListener('click', function(){							// p4 nya panggil dulu via selection
															alert(ok);
															});
	
// ringkasan event : seleksi dulu elemen > masukaan ke method even > jalankan function
// perbedaan handler vs listener = handler bersifat menimpa sedang listener menambah
// ada bayak event silahkan lihat di documentasi terkait dg mouse keyboard API dll

 -->


GIT MULTI REMOTE
---------------------------------------------
ada 3 repo yang harus di singkronkan
1. di github ada sebuah repository sebagai repo Project-Utama yang akan di jadikan patokan singkronisasi
2. lalu kontributor melakukan fork ke akun remote gihubnya nya
3. lalu kontributor clone ke localnya
4. remote ini di lihat dari sisi kontributor
5. kontributor melakukan remote ke 2 repo online, dan melakukan sync ke 3 reponya 
	- masuk github anda sbg kontributor 
	- dari sana cari repo utama yang anda tuju dan buka Project-Utama/Coba
	- klik fork, maka kita di kasih repo beserta parameternya, di repo kontributor 
	- berikutnya clone repo kontributor ini ke local:
	- klik clone, pilih HTTPs URL
	- local terminal :>
	KONEKSI
	- :> cd Documents/Project 			: tempatkan clone nya, terserah 
	- :> git clone <url> 				: tanpa "", url dari hasil clone tadi, maka kita akan download clone di local
	- :> cd Coba 					: masuk ke repo clone local
	- :> git remote 				: saat di cek hasilnya origin
	- :> git remote -v 				: dicek lebih dalam ternyata connect ke URL ke remote kontributor sendiri
	- :> git remote add sumber <url>		: supaya connect jg ke remote sumber project utama tambahkan remote sekali lagi
							  nama harus beda (kita kasih nama sumber) <url remote copas dari clone HTTPs Url Sumber>
	- :> git remote 				: cek maka muncul 2 remote sekarang
	- :> git remote -v 				: cek lebih dalam 2 remote, terlihat URL masing2 
	- :> alias graph="git log --all --decorate --aneline --graph" 	: bikin graph
	- :> graph 					: saat di graph maka akan terlihat yg singkron hanya ada 2. yaitu local dan repo kita(kontributor)
	- :> git fetch sumber 				: supaya terjadi 3 singkron, kita ambil dulu posisi HEAD dari repo sumber dengan "git fetch", setelah berhasil
	- :> graph 					: graph lagi, sekarang sudah 3 singkron: 
							  artinya kontributor bekerja di repo lokal dan meremote 2 repo di online, dan berhasil melakukan singkron ke 3 repository 
	MODIFIKASI DI SUMBER
	katakanlah di sumber ada perubahan satu baris dari pemilik,
	kontributor lakukan singkronisasi ke repo sumber, 
	melakukan cek, dan merging local, setelah singkron sumber dan local berhasil, 
	lalu push ke remote kontributor, untuk singkron lagi repo remote kontributor
	- :> git fetch sumber				: ambil data HEAD di sumber ke local
	- :> graph 					: terlihat sumber maju satu langkah, local dan remote masih singkron
	- :> git merge sumber/master 			: merging local dan sumber slash branch master 
	- :> graph 					: saat di graph yang ketinggalan satu langkah tinggal repo remote kontributor
	- :> git push -u origin master 			: untuk menyingkronkan tinggal push saja. 
	- :> (git push) 				: kalau sudah pernah -u push mk selanjutnya tinggal push saja tanpa -u (kayaknya)
---------------------------------------------
GIT REMOTE BRANCH
1. sekarang bagaimana kalau perubahan yang terjadi di local kontributor 
2. dan ingin mengirimkan perubahan pada repo sumber
	-----
	pull request
	- :> code . 				: buka repo local di code editor > dan lakukan beberapa perubahan, oya usahakan selalu bikin branch saat melkukan perubahan
	- :> git branch fitur 		: bikin branch di local (sebenarnya bisa di master kontributor jg boleh)
	- :> git checkout fitur 	: pindah ke branch fitur. cek di pojok kiri bawah vscode juga
	- lakukan ubahan di index.html beberapa baris di local branch "fitur"
	- :> git commit -am "ubah paragraf" 	: lalu add commit perubahan 
	- :> git status 			: sukses
	- :> graph 					: saat di graph yang memiliki kemajuan satu langkah hanya di branch "fitur" local sisanya 3 lainya di belakang 
	- :> git push origin fitur 	: push ke origin langsung (master github contributor), jangan ke master local dulu, sekaligus bikin branch fitur
	- :> graph 					: saat di graph terlihat singkron (fitur local <> fitur github remote)
	tinggal sekarang melakukan pull request di github kontrib ke github sumber. karena pull itu featur milik github (tidak bisa dilakukan di local)
	- buka repo kita di github 	
	- klik compare & pull request 	: tombol ini ada karena sebelumnya kita sebagai fork dari repo sumber 
	- dan selesaikan di halaman pull nya : disana terlihat denah perubahan nya, ada messages dll 
	- selesai : dari kontributor tugas pull sudah selesai 
	-----
	approve di repo sumber
	- buka repo github sumber 
	- buka tab PR (pull request)
	- disana tab conversation, commit, check, files changed. periksa semua parameter perubahan, messages perbandingan dll
	- untuk melakukan approve silahkan ke tab conversation > klik tombol merge > atau 
	- tombol "Review Changes" di kanan sejajar tab2 tadi, saat di klik ada beberapa opsi:
		- bisa diskusi "comment"
		- Approve : sama dengan merge
		- Request changes : mengembalikan ke kontributor agar dilakukan ubahan lagi
	- atau kita bisa tutup/tolak pull nya di tab conversation > tombol close pull request  
	- setelah di approve di pull pada repo contrib akan ada notif close (approved)     
	-----
	sync di local
	:> git fetch sumber 	: kita minta status HEAD ke sumber masih ada ketimpangan (tidak sync)
	:> graph 				: cek status sync 3 repo
	:> git branch 			: kita harus ke branch master di local
	:> git checkout master 	: karena kita masih di branch "fitur" kita harus pindah ke "master"
	:> git merge sumber/master : kita merge branch master sumber ke master local
	:> graph 				: sync sumber <> local, tapi origin branch master di remote github belum sync
	:> git push origin master 	: tinggal samakan saja dengan push 
	:> graph 				: ke 3 nya sudah sama
	-----
	hapus branch fitur (tugas sudah selesai)
	:> git branch -d fitur 	: hapus branch fitur di local
	:> graph 				: saat di graph ternyata branch fitur di github masih ada
	:> git push origin --delete fitur : hapus branch fitur di github kontributor
	:> graph 				: cek terhapus belum
	cek juga branch terhapus di githubnya langsung jika perlu
---------------------------------------------

BELAJAR FIREBASE WEB

ada dua cara menangani interaksi web dengan firebase, yaitu
1. NPM
2. modul bundler

ALAT TEMPUR UNTUK NPM
- instal Nodejs (NPM include) terbaru > node -v > npm -v
- instal vscode (atau lainya sublime) terbaru
- instal firebase-tools > npm install -g firebase-tools
- instal firebase SDK via NPM > masuk ke folder project kerja > npm install firebase > 
  > atau opsional pakai firebase SDK via CDN nanti akan di bahas
- terminal > untuk menjalankan NPM baik milik OS atau bawaan text editor

FIREBASE REGISTRASI

PROJECT DAN DATABASE

FIREBASE TERMINAL

HOSTING
  - setelah firebase-tools terinstal
  - npm login   // redirect ke akun gmail anda
  - npm init    // jalan kan di folder root project
  - npm deploy  // deploy/upload
INITIALISASI

BACA TULIS

DATA LIST SORT FILTER

//--------------------
* FIREBASE.COM -----
* buka website -> firebase.com > login > buka console > create project > project name (latihan silmi)
> tunggu > halaman dashboard kita 

* HOSTING -----
> sampai disini kita akan BELAJAR HOSTING dulu
jadi kita upload html kita di hosting > lalu hubungkan dengan firebaase > lalu interaksi CRUD

* PERALATAN TEMPUR -----
  > instal node js > karena kita butuh npm nya untuk instalasi environmen firebase nya
      > firebase SDK, firebase-tools (CLI) 
  > instal vs code terbaru
  > instal firebase-tools
    > bikin folder project > buka di terminal > ketik >: npm install -g firebase-tools 
    > pastikan semua perangkat tadi terinstal yang terbaru > bahkan linuxnya update dulu
    > pengalaman minta update terus dan merepotkan jika semua tidak yang terbaru

* FIREBASE CLI -----
  > buka folder projek kalian di local(firebase projekku ) di terminal
  > firebase CLI terminal coba ketik :> firebase > tampil help center
  > login >: firebase login > login diredirect ke browser console firebase lagin saja > email, password
* INISIALISASI -----
  > saat terminal berada di folder projek anda ketik >: firebase init
  > kita akan diberi pilihan paket firebaase mana yang di pilih > pilih hosting > pakai arrow key > lalu spasi > enter
  > pilih projek yang tadi dibuat di dashboard firebase web (latihan silmi)
  > nanti di folder kita akan di buatkan dua buah file.json dan file.rc
  > bikin lagi folder 'sejajar' bernama (public) dan isikan file index.html 
    > pada versi terbaru saya di suruh bikin folder public di CLI(default)
    > sekaligus index html nya
    > disini seperti htdoc nya PHP boleh bikin file folder dan link hore
    > tapi hanya file html, js, css saja yang bisa mungkin juga framework boleh
    * VSCODE -----
      >  vs code berperan sebagai editor index.html kita beserta projeknya save lalu deploy
  > bikin halaman di index dengan copas dari starter template dari website firebase nya
* LOCALHOST -----
  > kalau mau jalankan di localhost tinggal :> klik ketik > firebase serve > kita akan dikasih 
  url > http://localhost:5000 > buka URL tersebut di browser
* DEPLOY -----
  saat kita sudah punya file html aplikasi kita yang di buat di VSCODE dalam folder public maka tinggal deploy aja
  > kalau mau langsung di upload tinggal :> firebase deploy 
* VERSION
  > kalau kita punya beberapa project kita bisa beralih projek1 dan projek 2 misalnya(satu versi publish dua 
  versi develop misalnya latihan silmi1 dan latihan silmi2) maka kita bikin projek dulu di console
  > lalu kontrol di CLI nya : tambhkan projek >: firebase use --add > pilih projek >lalu bikin kan aliasnya
  atau bikin key nya (misalnya kasih nama "second")> atau lihat di file.rc di sana akan terlihat seperti key value
  > cara panggil atau aksesnya dengan > firebase use (lihat list project)
  > firebase use second

=================================

REALTIME DATABASES
* AKTIFKAN
  > kembali ke konsol > pilih realtime databases > create 
  > bikin nama db > pilih lokasi server > pilih lock mode > done
  > maka kita di kasih dashboard db GUI nya coba aja
  > tips struktur db kalau bisa se dangkal mungkin > 
    > kalau terpaksa ada yang bercabang maka gunakan saja key:value biasa saja
    > kalau ada koneksi ke table lain gunakan interaksi 'true' dengan table lain 
    > dan update saat terjadi perubahan pada salah satu tabel 
      maka terpaksa update kedua-duanya(dua tabel join) aja itu lebih efisien
      
      * BENTUK TABLE
        {key:value}
         //------
        {
          K:{
            K:v,
            k:V
          }
        }
        //------
      {
      players:{
        1:{
            nama:buffon,
            skill:tangkapan harimau
          },
        2:{
            nama:hansamu,
            skill:gocekan maut
          }
        },
      pelatih:...
      }
        //------
    
* CONNECTION DB
  > kita sudah punya halaman index.html kosong
  * TEMPLAT HTML. 
    vs code : 
      html,head,body tab atau lengkapnya ! tab 
  * INITIAL FIREBASE
    > buka console > project overview > project setting > copy templat ini dari mode npm >
    > paste di tag script html di head atau di body 
    > atau include dari halaman lainya index.js <script href="">
// ------------------------------------------------------

import { initializeApp } from "firebase/app"; // inisial awal di ambil/diimport dari SDK
const firebaseConfig = {
  apiKey: "AIzaSyAOdBTFQ45E5fWkYyB_7sp3gP-KvHUlqQA",
  authDomain: "latihan-hilman-april-2022.firebaseapp.com",
  databaseURL: "https://latihan-hilman-april-2022-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "latihan-hilman-april-2022",
  storageBucket: "latihan-hilman-april-2022.appspot.com",
  messagingSenderId: "854536857305",
  appId: "1:854536857305:web:aed1e0af7815fb155780c8"
};
const app = initializeApp(firebaseConfig);  // fungsi yang di import di jadikan variabel untuk digunakan inisialisasi 
// ------------------------------------------------------











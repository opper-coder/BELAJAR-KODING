BELAJAR FIREBASE WEB

ada dua cara menangani interaksi web dengan firebase, yaitu
1. NPM
2. modul bundler

ALAT TEMPUR UNTUK NPM
- instal Nodejs (NPM include) terbaru > node -v > npm -v
- instal vscode (atau lainya sublime) terbaru
- instal firebase-tools :> npm install -g firebase-tools > coba tes dengan :> firebase
  - maka muncul help center
- instal firebase SDK via NPM > masuk ke root folder project kerja >
  :> npm install firebase (tapi saya tidah berhasil g tau kenapa) > 
  > atau opsional pakai firebase SDK via CDN nanti akan di bahas (tidak usah instal firebase)
- terminal > untuk menjalankan NPM baik milik OS atau bawaan text editor

FIREBASE REGISTRASI
- login dulu atau bukin akun firebase pakai email google di firebase.com

PROJECT DAN DATABASE
- bikin projek baru 
  - masukan nama
  - pilih lokasi server pastikan terdekat southeast-1 singapura southeast-2 jakarta
  - matikan analithyc 
  - done
  
INITIALISASI
- bikin folder project
- buka terminal > firebase init > kita di kasih 2 file > bikin folder "public" berisi file "index.html"
- bikin template HTML standard dulu

SDK
- ada 3 cara instal SDK   
1 pakai npm > npm install firebase 
  - maka kita akan di kasih paket javascript SDK dll
  - buka console 
  - pilih: project overview/project setting
  - copy sourcecode initialisasi 
2 atau pakai webpack - rollup
  - belum belajar ini yang paling di anjurkan karena bisa mengkompress lebih kecil
3 pakai CDN ini yang paling berhasil tapi hanya untuk latihan tidak boleh untuk produksi
  - copas versi CDN di halaman HTML index.html
  - sekaligus link versi CDN (lihat di dokumentasi ada cara nulisnya)
  
HOSTING
  - setelah firebase-tools terinstal
  - npm login   // redirect ke akun gmail anda
  - npm init    // jalan kan di folder root project
  - npm deploy  // deploy/upload
  
CREATE DATABASE CONSOLE
  - key:value aja
  - ada child tapi jangan terlalu dalam
  - kalau ada koneksi dengan tabel lain maka pakai aja cara daftarkan true pada kedua nya
    - contact:{
        nama: andy,
        umur:9,
        grup:{
          sosial: true,
          jualbeli: true
        },
      grup:{
        nama grup:sosial,
        alamat grup: saiti
        anggota:{
          andy: true,
          aqil: true
        }
        
TULIS DATA
  - di index.js
  - nulisnya set();
  - set(referensi,{isi}); // isi {key:value}
  - atau jelasnya
  --------------------------
  function tambahData(){                  // 2. bikin function
    const db = getDatabase();             // 3. bikin connection db
    const reff = ref(db, 'guru/dua/aa');  // 4. bikin referensi lokasi tidak di tutup dengan garis miring
    
    set(reff,{ kata:"halo silmi"} )       // 5. jalan kan set(ref, {k:v}).then(callback).catch(callback);
    .then(() => {
      console.log("set sukses");
    })
    .catch((error) => {
      console.log("set gagal");
    });
  }
  tambahData();                           // 1. panggil function
  -------------------------- contoh2
    function tulis(namaUniq, nama, alamat){
      const conn : getDatabase();
      const reff : ref(conn, 'pemain/' + namaUniq);           // jika referensi belum ada di db maka akan di buatkan 
      set(reff,{namaUniq:pertama, nama:aqil, alamat:saiti});  // isi di ambil dari argument
    }
    tulis("pertama","aqil","saiti");
  --------------------------

HAPUS DATA
 - sama dengan set() data
 - 

EDIT DATA
 - sama dengan set() data
 - saat set() data pada jalur ref() yang sama maka akan di timpa dengan nilai baru beserta seluruh childnya (belum praktekin sih)

BACA DATA
- pakai onValue() tentu import dulu
- onValue(reff, callback); pakai snapshot.val();
- val() bisa di ganti dengan exists()
--------------------------
const db = getDatabase();
const reff = ref(db, 'guru/empat' );

onValue(reff, (snapshot) => {
  const data = snapshot.val();
  console.log(data);
});
-------------------------- alias
onValue(reff, (snapshot) => { console.log(snapshot.val()) });

  BACA DATA SEKALI
  - untuk data yang tidak sering di update sebagaimana chat (seperti artikel, deskripsi, detil barang dll)
    dan bisa di simpan di cache gunakan get()
  - penggunaan get() hanya untuk yang benar2 statis jangan yang dinamis bisa mmakan bandwidth
  - tambah di akhir {onlyOnce:true}
  --------------------------
  onValue(reff, (snapshot) => { console.log(snapshot.val()) }, {onlyOnce: true});
  







DATA LIST SORT FILTER







//--------------------



* LOCALHOST -----
  > kalau mau jalankan di localhost tinggal :> klik ketik > firebase serve > kita akan dikasih 
  url > http://localhost:5000 > buka URL tersebut di browser
* DEPLOY -----
  saat kita sudah punya file html aplikasi kita yang di buat di VSCODE dalam folder public maka tinggal deploy aja
  > kalau mau langsung di upload tinggal :> firebase deploy 
* VERSION
  > kalau kita punya beberapa project kita bisa beralih projek1 dan projek 2 misalnya(satu versi publish dua 
  versi develop misalnya latihan silmi1 dan latihan silmi2) maka kita bikin projek dulu di console
  > lalu kontrol di CLI nya : tambhkan projek >: firebase use --add > pilih projek >lalu bikin kan aliasnya
  atau bikin key nya (misalnya kasih nama "second")> atau lihat di file.rc di sana akan terlihat seperti key value
  > cara panggil atau aksesnya dengan > firebase use (lihat list project)
  > firebase use second

=================================

REALTIME DATABASES
* AKTIFKAN
  > kembali ke konsol > pilih realtime databases > create 
  > bikin nama db > pilih lokasi server > pilih lock mode > done
  > maka kita di kasih dashboard db GUI nya coba aja
  > tips struktur db kalau bisa se dangkal mungkin > 
    > kalau terpaksa ada yang bercabang maka gunakan saja key:value biasa saja
    > kalau ada koneksi ke table lain gunakan interaksi 'true' dengan table lain 
    > dan update saat terjadi perubahan pada salah satu tabel 
      maka terpaksa update kedua-duanya(dua tabel join) aja itu lebih efisien
      
      * BENTUK TABLE
        {key:value}
         //------
        {
          K:{
            K:v,
            k:V
          }
        }
        //------
      {
      players:{
        1:{
            nama:buffon,
            skill:tangkapan harimau
          },
        2:{
            nama:hansamu,
            skill:gocekan maut
          }
        },
      pelatih:...
      }
        //------
    
* CONNECTION DB
  > kita sudah punya halaman index.html kosong
  * TEMPLAT HTML. 
    vs code : 
      html,head,body tab atau lengkapnya ! tab 
  * INITIAL FIREBASE
    > buka console > project overview > project setting > copy templat ini dari mode npm >
    > paste di tag script html di head atau di body 
    > atau include dari halaman lainya index.js <script href="">
// ------------------------------------------------------

import { initializeApp } from "firebase/app"; // inisial awal di ambil/diimport dari SDK
const firebaseConfig = {
  apiKey: "AIzaSyAOdBTFQ45E5fWkYyB_7sp3gP-KvHUlqQA",
  authDomain: "latihan-hilman-april-2022.firebaseapp.com",
  databaseURL: "https://latihan-hilman-april-2022-default-rtdb.asia-southeast1.firebasedatabase.app",
  projectId: "latihan-hilman-april-2022",
  storageBucket: "latihan-hilman-april-2022.appspot.com",
  messagingSenderId: "854536857305",
  appId: "1:854536857305:web:aed1e0af7815fb155780c8"
};
const app = initializeApp(firebaseConfig);  // fungsi yang di import di jadikan variabel untuk digunakan inisialisasi 
// ------------------------------------------------------










